2012-03-15  Jan Holownia <jaho@pml.ac.uk>
    * general:          Cleaned up unused code, refactored some parts for better maintainability.
    * general:          Removed unnecessary threading.
    * AsciiLoader.cpp:  Removed. LasLoader now deals with ascii files.
    * Point.cpp:        Rewritten for slightly better performance.
    * LidarPoint.cpp:   Modified to hold las 1.3 data. (It's now too big and affects performance!)
    * LasLoader.cpp:    Rewritten to use laslib library. Added methods to read ascii data with or
                        without specifying scale factors.
    * LasSaver.cpp:     Rewritten to use laslib library. Added methods to save waveform data.   
    * Quadtree.cpp:     Fixed a bug where using a fence would include some incorrect points.

2012-03-20  Jan Holownia <jaho@pml.ac.uk>
    * Quadtree.cpp:     Fixed possible memory leak when loading using a fence and when saving files.

2012-03-26  Jan Holownia <jaho@pml.ac.uk>
    * PointData.h:      Added. A struct to hold LAS 1.3 waveform attributes.
    * LidarPoint.cpp:   Reduced size to improve overall performance. Removed waveform related attributes
                        and moved the to PointData. Added dataindex which holds an index to PointData 
                        object in a file.
    * LasLoader.cpp:    Now creates temporary files which hold PointData objects. Added static members to
                        keep track of loaded points and indexing of temporary files. A separate file is
                        created for each flightline.
    * LasSaver.cpp:     Modified to read PointData objects from temporary files when saving.
    
2012-03-27  Jan Holownia <jaho@pml.ac.uk>
    * Quadtree.cpp:     Added code which properly cleans up temporary files left by the quadtree.
    * PointBucket.cpp:  Modified setPoint() method to used precomputed values for inserting into subbuckets. 
                        They are stored in int* pointInterval and calculated in constructor. Big performance
                        improvement (~50%).
                        
2012-04-04  Jan Holownia <jaho@pml.ac.uk>
    * Quadtree.cpp:     Fixed a huge memory usage caused by using potentially unlimited size array in load method.
    * LasLoader.cpp:    Modified so it now reads data in chunks.
    
2012-04-12  Jan Holownia <jaho@pml.ac.uk>
    * Quadtree.cpp:     Fixed a bug where point skipping would not work corectly.
    * LasSaver.cpp:     Fixed a bug when saving a LAS file to ascii would set time to 0.
    
2012-04-20  Jan Holownia <jaho@pml.ac.uk>
    * general:          Added support for latlong projection.
    * LasLoader.cpp:    Added conversion method to automatically convert latlong points to UTM when loading.
    * LasSaver.cpp:     Added conversion methods which allow specifying projection of the output file between
                        latlong and UTM. UTM to latlong conversion not fully working.
                        
2012-05-10  Jan Holownia <jaho@pml.ac.uk>
    * general:          Projection conversion now fixed except UTM to latlong. There is a problem with determining
                        correct UTM zone, because alspp puts projection information under wrong geokeys in VLRs.
                        UTM files outputted by lag work fine.
                        
2012-05-23  Jan Holownia <jaho@pml.ac.uk>
    * QuadtreeNode.cpp: Fixed splitNode() bug which wouldn't allow to add new points to the quadtree after filling a
                        bucket, when using Add to load files in LAG to load files.
                        
2012-06-28  Jan Holownia <jaho@pml.ac.uk>
    * General:           Started Removing LasLoader and LasReader. They are still included, however the should be
                         deleted eventually and are no longer maintained. The loading and saving of points is now 
                         handles outside of the quadtree. This make the maintenance easier and and lowers memory
                         consumption as no additional buffer is required.
    * Quadtree.cpp:      Added adjustBoundary method, which has to be used when loading points from multiple files.
        
2012-07-09  Jan Holownia <jaho@pml.ac.uk>
    * General:          Removed LasLoader, LasSaver and geoprojection converter as loading/saving is no longer done
                        through the quadtree.
    * Quadtree.cpp:     Removed constructors based on LasLoader, load() method and save_points() method. Cleaned up 
                        the interface.
    * Quadtree.cpp:     Added function getAllBuckets() which returns all buckets from the quadtree.
                        
2012-07-11  Jan Holownia <jan.holownia@gmail.com>
    * LidarPoint.cpp:   Added an assignment operator which assignes values to the point provided a LASpoint object
                        which makes it easier to use (eg. LidarPoint point = reader->point; intead of LidarPoint
                        point = LidarPoint(reader->point.get_x(), reader->point.get_y() ...).
    * PointData.cpp:    Added an assignment operator similarly to the LidarPoint, but it takes LASpoint.wavepacket
                        object.
                        
2012-07-12  Jan Holownia <jan.holownia@gmail.com>
    * general:          Replaced standard malloc with jemalloc to solve memory fragmentation issue. The memory usage
                        dropped down by around 60% and to desired level. Finally.
    * Quadtree.cpp:     Added cacheFolder as an argument to the constructor which specifies the location of quadtree
                        cache.
                        
